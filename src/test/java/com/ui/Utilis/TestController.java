package com.ui.Utilis;

import org.testng.ITestContext;
import org.testng.annotations.*;
import org.testng.xml.XmlTest;

import java.lang.reflect.Method;

public class TestController extends TestInitailisation{

    @BeforeTest
    @Parameters({"testEnvPath", "excelFilePath", "jsonFilePath", "jsonDirectory", "applicationType", "url", "browser", "browser_version", "device", "os_version", "URI", "envType", "appSycURI", "appSycAuth", "version", "partnerURI", "token", "accessToken", "isJWT", "endpointPrefix", "authorization", "franchiseId", "dbType", "serviceType", "store", "host", "locale", "region", "country", "currency", "timezone", "phoneNumber", "emailId", "test_region", "browserstack_execution_local", "bs_app_path", "productName", "grid_Hub_IP", "gps_location", "moduleNames", "email_recipients", "error_email_recipients", "failure_email_recipients", "browserstack_midSessionInstallApps","unblockToken","networkProfile","customNetwork","initialSelfHeal","healingMatchScore","device_location","midSessionBuildNo","healingToggle","gpsLocation","OptionalLocator","pickMsElement","mailUserName","mailPassword","botChannelApiURL","sessionLaunchLevel"})
    public void moduleInit(ITestContext context, XmlTest xmlTest, @Optional String testEnvPath, @Optional String excelFilePath,
                           @Optional String jsonFilePath, @Optional String jsonDirectory, @Optional String applicationType, @Optional String url, @Optional String browser,
                           @Optional String browserVersion, @Optional String device, @Optional String os_version,
                           @Optional String URI, @Optional String envType, @Optional String appSycURI, @Optional String appSycAuth, @Optional String version, @Optional String partnerURI, @Optional String token, @Optional String accessToken, @Optional String isJWT, @Optional String endpointPrefix, @Optional String authorization, @Optional String franchiseId, @Optional String dbType, @Optional String serviceType,
                           @Optional String store, @Optional String host, @Optional String locale,
                           @Optional String region, @Optional String country, @Optional String currency,
                           @Optional String timezone, @Optional String phoneNumber, @Optional String emailId, @Optional String test_region, @Optional String browserstack_execution_local, @Optional String bs_app_path, @Optional String productName, @Optional String grid_Hub_IP, @Optional String gps_location, @Optional String moduleNames, @Optional String email_recipients, @Optional String error_email_recipients, @Optional String failure_email_recipients, @Optional String browserstack_midSessionInstallApps, @Optional String unblockToken, @Optional String networkProfile, @Optional String customNetwork, @Optional String initialSelfHeal, @Optional String healingMatchScore, @Optional String device_location, @Optional String midSessionBuildNo, @Optional String healingToggle, @Optional String gpsLocation, @Optional String OptionalLocator, @Optional Boolean pickMsElement, @Optional String mailUserName, @Optional String mailPassword, @Optional String botChannelApiURL, @Optional String sessionLaunchLevel) {
        moduleInitilalization(context, xmlTest, testEnvPath, excelFilePath, jsonFilePath, jsonDirectory, applicationType, url, browser, browserVersion, device, os_version, URI, envType, appSycURI, appSycAuth, version, partnerURI, token, accessToken, isJWT, endpointPrefix, authorization, franchiseId, dbType, serviceType, store, host, locale, region, country, currency, timezone, phoneNumber, emailId, test_region, browserstack_execution_local, bs_app_path, productName, grid_Hub_IP, gps_location, moduleNames, email_recipients, error_email_recipients, failure_email_recipients, browserstack_midSessionInstallApps,unblockToken,networkProfile,customNetwork,initialSelfHeal,healingMatchScore,device_location,midSessionBuildNo,healingToggle,gpsLocation,OptionalLocator,pickMsElement,mailUserName,mailPassword,botChannelApiURL,sessionLaunchLevel);
    }

    private void moduleInitilalization(ITestContext context, XmlTest xmlTest, String testEnvPath, String excelFilePath, String jsonFilePath, String jsonDirectory, String applicationType, String url, String browser, String browserVersion, String device, String osVersion, String uri, String envType, String appSycURI, String appSycAuth, String version, String partnerURI, String token, String accessToken, String isJWT, String endpointPrefix, String authorization, String franchiseId, String dbType, String serviceType, String store, String host, String locale, String region, String country, String currency, String timezone, String phoneNumber, String emailId, String testRegion, String browserstackExecutionLocal, String bsAppPath, String productName, String gridHubIp, String gpsLocation, String moduleNames, String emailRecipients, String errorEmailRecipients, String failureEmailRecipients, String browserstackMidSessionInstallApps, String unblockToken, String networkProfile, String customNetwork, String initialSelfHeal, String healingMatchScore, String deviceLocation, String midSessionBuildNo, String healingToggle, String gpsLocation1, String optionalLocator, Boolean pickMsElement, String mailUserName, String mailPassword, String botChannelApiURL, String sessionLaunchLevel) {
        if(platformType!=null){
            System.out.println("Test Execution Started for Module :"+ xmlTest.getName());
//            testBaseInitialisation(context,xmlTest);

        }
    }


    @BeforeClass(alwaysRun = true)
    @Parameters({"testEnvPath", "excelFilePath", "jsonFilePath", "jsonDirectory", "applicationType", "url", "browser", "browser_version", "device", "os_version", "URI", "envType", "appSycURI", "appSycAuth", "version", "partnerURI", "token", "accessToken", "isJWT", "endpointPrefix", "authorization", "franchiseId", "dbType", "serviceType", "store", "host", "locale", "region", "country", "currency", "timezone", "phoneNumber", "emailId", "test_region", "browserstack_execution_local", "bs_app_path", "productName", "grid_Hub_IP", "gps_location", "moduleNames", "email_recipients", "error_email_recipients", "failure_email_recipients", "browserstack_midSessionInstallApps","unblockToken","networkProfile","customNetwork","initialSelfHeal","healingMatchScore","device_location","midSessionBuildNo","healingToggle","gpsLocation","OptionalLocator","pickMsElement","mailUserName","mailPassword","botChannelApiURL","sessionLaunchLevel"})
    public void classInit(ITestContext context, XmlTest xmlTest, @Optional String testEnvPath, @Optional String excelFilePath,
                          @Optional String jsonFilePath, @Optional String jsonDirectory, @Optional String applicationType, @Optional String url, @Optional String browser,
                          @Optional String browserVersion, @Optional String device, @Optional String os_version,
                          @Optional String URI, @Optional String envType, @Optional String appSycURI, @Optional String appSycAuth, @Optional String version, @Optional String partnerURI, @Optional String token, @Optional String accessToken, @Optional String isJWT, @Optional String endpointPrefix, @Optional String authorization, @Optional String franchiseId, @Optional String dbType, @Optional String serviceType,
                          @Optional String store, @Optional String host, @Optional String locale,
                          @Optional String region, @Optional String country, @Optional String currency,
                          @Optional String timezone, @Optional String phoneNumber, @Optional String emailId, @Optional String test_region, @Optional String browserstack_execution_local, @Optional String bs_app_path, @Optional String productName, @Optional String grid_Hub_IP, @Optional String gps_location, @Optional String moduleNames, @Optional String email_recipients, @Optional String error_email_recipients, @Optional String failure_email_recipients, @Optional String browserstack_midSessionInstallApps,@Optional String unblockToken, @Optional String networkProfile,@Optional String customNetwork, @Optional String initialSelfHeal, @Optional String healingMatchScore,@Optional String device_location,@Optional String midSessionBuildNo, @Optional String healingToggle,@Optional String gpsLocation,@Optional String OptionalLocator,@Optional Boolean pickMsElement,@Optional String mailUserName,@Optional String mailPassword,@Optional String botChannelApiURL,@Optional String sessionLaunchLevel) {
        classInitialization(context, xmlTest, testEnvPath, excelFilePath, jsonFilePath, jsonDirectory, applicationType, url, browser, browserVersion, device, os_version, URI, envType, appSycURI, appSycAuth, version, partnerURI, token, accessToken, isJWT, endpointPrefix, authorization, franchiseId, dbType, serviceType, store, host, locale, region, country, currency, timezone, phoneNumber, emailId, test_region, browserstack_execution_local, bs_app_path, productName, grid_Hub_IP, gps_location, moduleNames, email_recipients, error_email_recipients, failure_email_recipients, browserstack_midSessionInstallApps,unblockToken,networkProfile,customNetwork,initialSelfHeal,healingMatchScore,device_location,midSessionBuildNo,healingToggle,gpsLocation,OptionalLocator,pickMsElement,mailUserName,mailPassword,botChannelApiURL,sessionLaunchLevel);

    }

    private void classInitialization(ITestContext context, XmlTest xmlTest, String testEnvPath, String excelFilePath, String jsonFilePath, String jsonDirectory, String applicationType, String url, String browser, String browserVersion, String device, String osVersion, String uri, String envType, String appSycURI, String appSycAuth, String version, String partnerURI, String token, String accessToken, String isJWT, String endpointPrefix, String authorization, String franchiseId, String dbType, String serviceType, String store, String host, String locale, String region, String country, String currency, String timezone, String phoneNumber, String emailId, String testRegion, String browserstackExecutionLocal, String bsAppPath, String productName, String gridHubIp, String gpsLocation, String moduleNames, String emailRecipients, String errorEmailRecipients, String failureEmailRecipients, String browserstackMidSessionInstallApps, String unblockToken, String networkProfile, String customNetwork, String initialSelfHeal, String healingMatchScore, String deviceLocation, String midSessionBuildNo, String healingToggle, String gpsLocation1, String optionalLocator, Boolean pickMsElement, String mailUserName, String mailPassword, String botChannelApiURL, String sessionLaunchLevel) {
    }

    @BeforeMethod(alwaysRun = true)
    @Parameters({"testEnvPath", "excelFilePath", "jsonFilePath", "jsonDirectory", "applicationType", "url", "browser", "browser_version", "device", "os_version", "URI", "envType", "appSycURI", "appSycAuth", "version", "partnerURI", "token", "accessToken", "isJWT", "endpointPrefix", "authorization", "franchiseId", "dbType", "serviceType", "store", "host", "locale", "region", "country", "currency", "timezone", "phoneNumber", "emailId", "test_region", "browserstack_execution_local", "bs_app_path", "productName", "grid_Hub_IP", "gps_location", "moduleNames", "email_recipients", "error_email_recipients", "failure_email_recipients", "browserstack_midSessionInstallApps","unblockToken","networkProfile","customNetwork","initialSelfHeal","healingMatchScore","device_location","midSessionBuildNo","healingToggle","gpsLocation","OptionalLocator","pickMsElement","mailUserName","mailPassword","botChannelApiURL","sessionLaunchLevel"})
    public void methodInit(ITestContext context, XmlTest xmlTest, Method method, @Optional String testEnvPath, @Optional String excelFilePath,
                           @Optional String jsonFilePath, @Optional String jsonDirectory, @Optional String applicationType, @Optional String url, @Optional String browser,
                           @Optional String browserVersion, @Optional String device, @Optional String os_version,
                           @Optional String URI, @Optional String envType, @Optional String appSycURI, @Optional String appSycAuth, @Optional String version, @Optional String partnerURI, @Optional String token, @Optional String accessToken, @Optional String isJWT, @Optional String endpointPrefix, @Optional String authorization, @Optional String franchiseId, @Optional String dbType, @Optional String serviceType,
                           @Optional String store, @Optional String host, @Optional String locale,
                           @Optional String region, @Optional String country, @Optional String currency,
                           @Optional String timezone, @Optional String phoneNumber, @Optional String emailId, @Optional String test_region, @Optional String browserstack_execution_local, @Optional String bs_app_path, @Optional String productName, @Optional String grid_Hub_IP, @Optional String gps_location, @Optional String moduleNames, @Optional String email_recipients, @Optional String error_email_recipients, @Optional String failure_email_recipients, @Optional String browserstack_midSessionInstallApps, @Optional String unblockToken, @Optional String networkProfile, @Optional String customNetwork, @Optional String initialSelfHeal, @Optional String healingMatchScore, @Optional String device_location, @Optional String midSessionBuildNo, @Optional String healingToggle, @Optional String gpsLocation, @Optional String OptionalLocator, @Optional Boolean pickMsElement, @Optional String mailUserName, @Optional String mailPassword, @Optional String botChannelApiURL, @Optional String sessionLaunchLevel) {
        setUp(context, xmlTest, method, testEnvPath, excelFilePath, jsonFilePath, jsonDirectory, applicationType, url, browser, browserVersion, device, os_version, URI, envType, appSycURI, appSycAuth, version, partnerURI, token, accessToken, isJWT, endpointPrefix, authorization, franchiseId, dbType, serviceType, store, host, locale, region, country, currency, timezone, phoneNumber, emailId, test_region, browserstack_execution_local, bs_app_path, productName, grid_Hub_IP, gps_location, moduleNames, email_recipients, error_email_recipients, failure_email_recipients, browserstack_midSessionInstallApps,unblockToken,networkProfile,customNetwork,initialSelfHeal,healingMatchScore,device_location,midSessionBuildNo,healingToggle,gpsLocation,OptionalLocator,pickMsElement,mailUserName,mailPassword,botChannelApiURL,sessionLaunchLevel);
    }

    private void setUp(ITestContext context, XmlTest xmlTest, Method method, String testEnvPath, String excelFilePath, String jsonFilePath, String jsonDirectory, String applicationType, String url, String browser, String browserVersion, String device, String osVersion, String uri, String envType, String appSycURI, String appSycAuth, String version, String partnerURI, String token, String accessToken, String isJWT, String endpointPrefix, String authorization, String franchiseId, String dbType, String serviceType, String store, String host, String locale, String region, String country, String currency, String timezone, String phoneNumber, String emailId, String testRegion, String browserstackExecutionLocal, String bsAppPath, String productName, String gridHubIp, String gpsLocation, String moduleNames, String emailRecipients, String errorEmailRecipients, String failureEmailRecipients, String browserstackMidSessionInstallApps, String unblockToken, String networkProfile, String customNetwork, String initialSelfHeal, String healingMatchScore, String deviceLocation, String midSessionBuildNo, String healingToggle, String gpsLocation1, String optionalLocator, Boolean pickMsElement, String mailUserName, String mailPassword, String botChannelApiURL, String sessionLaunchLevel) {
    }




}
